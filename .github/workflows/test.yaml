name: Tests

on:
  push:
    branches:
      - main
  pull_request:
  schedule:
    # Weekly scan
    - cron: "20 4 * * 1"

jobs:
  tests:
    name: "Run QA tests"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Python
        uses: actions/setup-python@v6
        with:
          python-version-file: "pyproject.toml"

      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true

      - name: Install dependencies
        run: |
          uv tool install --python-preference only-managed tox --with tox-uv

      - name: Run tests
        run: |
          tox

      - name: Upload test artifacts
        uses: actions/upload-artifact@v4
        with:
          name: tests-${{ github.job }}-artifacts-${{ github.run_attempt }}
          path: coverage.xml

      - name: Upload to codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  tics:
    name: "Run TiCS"
    needs: tests
    runs-on: [self-hosted, amd64, tiobe, noble]
    steps:
      - uses: actions/checkout@v5

      - name: Setup Python
        uses: actions/setup-python@v6
        with:
          python-version-file: "pyproject.toml"

      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true

      - name: Install dependencies
        run: |
          uv sync --locked --all-extras --dev

      - name: Down coverage artifacts
        uses: actions/download-artifact@v5
        with:
          merge-multiple: true # There is only one artifact, but this removes the subfolder

      - name: Prep coverage reports
        shell: bash
        run: |
          mv coverage.xml Cobertura.xml

      - name: Determine TiCS run conditions
        id: tics-condition
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "tics_mode=client" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event_name }}" == "push" && "${{ github.ref }}" == "refs/heads/main" ]] || [[ "${{ github.event_name }}" == "schedule" ]]; then
            echo "tics_mode=qserver" >> $GITHUB_OUTPUT
          fi

      - name: "TiCS"
        if: ${{ steps.tics-condition.outputs.tics_mode != '' }}
        uses: tiobe/tics-github-action@v3
        with:
          mode: ${{ steps.tics-condition.outputs.tics_mode }}
          project: ubuntu-insights-k8s-operator
          viewerUrl: https://canonical.tiobe.com/tiobeweb/TICS/api/cfg?name=default
          ticsAuthToken: ${{ secrets.TICSAUTHTOKEN }}
          installTics: true
